version: '3'

volumes:
  pg_data:
  redis_data:
  media:
  static:

services:

  nginx:
    image: nginx:alpine
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/:/etc/ssl/
      - static:/static/
      - media:/media/
    ports:
      - 80:80
      - 443:443

  db:
    image: postgres:17-alpine
    env_file: .env
    restart: on-failure
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      PGUSER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 3s
      retries: 3
    expose:
      - "5432"

  redis:
    image: redis:7.2-alpine
    env_file: .env
    restart: on-failure
    volumes:
      - redis_data:/root/redis
    healthcheck:
      test: ["CMD", "redis-cli", "${REDIS_PASSWORD}", "ping"]
      interval: 3s
      timeout: 3s
      retries: 3
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    expose:
      - "6379"

  backend:
    image: vladislavrotvash/gopher_bot:latest
    env_file: .env
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "make project-start-in-container"
    volumes:
      - media:/app/src/media/
      - static:/app/src/staticfiles/
    expose:
      - "8000"
